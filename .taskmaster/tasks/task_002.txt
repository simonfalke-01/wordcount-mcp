# Task ID: 2
# Title: Implement Core Text Analysis Logic
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Create the core text analysis functions in `src/utils/text-analyzer.ts` for counting words, letters, characters, sentences, and paragraphs.
# Details:
Implement five functions: `count_words` (split by whitespace), `count_letters` (regex `/[a-zA-Z]/g`), `count_characters` (`string.length`), `count_sentences` (split by terminators, handling abbreviations), and `count_paragraphs` (split by `\n\n+`). Ensure functions handle edge cases like empty or null inputs gracefully.

# Test Strategy:
Write comprehensive unit tests for each function covering standard inputs, edge cases (empty strings, unicode, special characters), and performance for large texts (up to 10k words).

# Subtasks:
## 1. Implement count_words function [pending]
### Dependencies: None
### Description: Create count_words function that splits text by whitespace and counts words, with unit tests
### Details:


## 2. Implement count_letters function [pending]
### Dependencies: None
### Description: Create count_letters function that counts alphabetic characters (a-z, A-Z) only, with unit tests
### Details:


## 3. Implement count_characters function [pending]
### Dependencies: None
### Description: Create count_characters function that counts total characters including spaces, with unit tests
### Details:


## 4. Implement count_sentences function [pending]
### Dependencies: None
### Description: Create count_sentences function that splits by sentence terminators (. ! ?) with proper handling, with unit tests
### Details:


## 5. Implement count_paragraphs function [pending]
### Dependencies: None
### Description: Create count_paragraphs function that splits by double line breaks, with unit tests
### Details:


